// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use './utils' as utils;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


// Imagine my main brand color is #d80529, I need to generate an Material palette based on this
// primary color. I can use the Material Design color tool to generate a palette:
// https://material.io/resources/color/#!/?view.left=0&view.right=1&primary.color=d80529
$dark-primary-text: rgba(black, 0.87);
$light-primary-text: white;
$custom-palette: (
  50 : #fae1e5,
  100 : #f3b4bf,
  200 : #ec8294,
  300 : #e45069,
  400 : #de2b49,
  500 : #d80529,
  600 : #d40424,
  700 : #ce041f,
  800 : #c80319,
  900 : #bf010f,
  A100 : #ffe7e8,
  A200 : #ffb4b7,
  A400 : #ff8185,
  A700 : #ff686d,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300 : $dark-primary-text,
    400 : $dark-primary-text,
    500 : $light-primary-text,
    600 : $light-primary-text,
    700 : $light-primary-text,
    800 : $light-primary-text,
    900 : $light-primary-text,
    A100 : $dark-primary-text,
    A200 : $dark-primary-text,
    A400 : $dark-primary-text,
    A700 : $light-primary-text,
  )
);
// You can check the predefined palettes here:
// node_modules/@angular/material/core/theming/_palette.scss
// And the theming API here:
// node_modules/@angular/material/core/theming/_theming.scss

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ng-beginner-primary: mat.define-palette($custom-palette);
$ng-beginner-accent: mat.define-palette(mat.$blue-grey-palette, A200, A100, A400);

// Light theme
$ng-beginner-primary-light: mat.define-palette(mat.$indigo-palette);
$ng-beginner-accent-light: mat.define-palette($custom-palette);

// The warn palette is optional (defaults to red).
$ng-beginner-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ng-beginner-theme: mat.define-dark-theme((
  color: (
    primary: $ng-beginner-primary,
    accent: $ng-beginner-accent,
    warn: $ng-beginner-warn,
  ),
  // Only include `typography` and `density` in the default dark theme.
  typography: mat.define-typography-config(),
  density: 0,
));

// Light theme
$ng-beginner-theme-light: mat.define-light-theme((
  color: (
    primary: $ng-beginner-primary-light,
    accent: $ng-beginner-accent-light,
    warn: $ng-beginner-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.core-theme($ng-beginner-theme);
@include mat.all-component-themes($ng-beginner-theme);
@include utils.color($ng-beginner-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-theme($ng-beginner-theme-light);
  @include mat.all-component-themes($ng-beginner-theme-light);
  @include utils.color($ng-beginner-theme-light);
}

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
